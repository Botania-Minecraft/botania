buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}


repositories {
    mavenCentral()
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
    ivy {
        name "Baubles-deobf"
        artifactPattern "https://dl.dropboxusercontent.com/u/47135879/[module]-[revision].[ext]"
    }
}

apply plugin: 'forge'
apply plugin: 'curseforge'

ext.configFile = file('build.properties')

ext.config = parseConfig(configFile)
ext.priv = parseConfig(file('private.properties'))

version = "${config.version}-${config.build_number}"
group = "vazkii.botania"
archivesBaseName = config.mod_name


minecraft {
    version = "${config.mc_version}-${config.forge_version}"
    runDir = "eclipse"

    replaceIn "LibMisc.java"
    replace 'GRADLE:BUILD', config.build_number
    replace 'GRADLE:VERSION', config.version
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
}

configurations {
    ftpAntTask
}

dependencies {
    compile name: "Baubles-deobf", version: "1.7.10-1.0.1.10", ext: "jar"
    compile "codechicken:CodeChickenLib:1.7.10-1.1.1.95:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.2.9:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.2.15:dev"

    //and a bit more for FTP
    ftpAntTask module("org.apache.ant:ant-commons-net:1.7.0") {
        module("commons-net:commons-net:1.4.1") {
            dependencies("oro:oro:2.0.8@jar")
        }
    }
}

//simple function that we can use
//Got this from: http://svn.codehaus.org/gradle/website/build.gradle
void ftp(Map args, Closure antFileset = {}) {
    ant {
        taskdef(name: 'ftp',
                classname: 'org.apache.tools.ant.taskdefs.optional.net.FTP',
                classpath: configurations.ftpAntTask.asPath)
        Map ftpArgs = args + [ //some default options
                               verbose : 'yes',
                               server  : priv.host,
                               userid  : priv.user,
                               password: priv.pass
        ]
        delegate.ftp(ftpArgs) {
            antFileset.delegate = delegate
            antFileset()
        }
    }
}

/**
 * Parse a specified file
 * @return config File
 */
def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

/**
 * Increments the buildnumber in your config file, and saves it
 */
task incrementBuildNumber(dependsOn: 'build') << {
    config.build_number = (config.build_number.toString().toInteger()) + 1
    configFile.withWriter {
        config.toProperties().store(it, "")
    }

    file('web/versions.ini').append("\n${version}=${minecraft.version}")
    file("./version/${minecraft.version}.txt").write("${version}")
}

task apiJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.output
    include 'vazkii/botania/api/**' 
    classifier = 'api'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}


 
  /**
   * This is the upload task from the build.xml
   * Only increments on upload.
   */
task upload(dependsOn: 'incrementBuildNumber') << {
    ftp(action: 'mkdir', remotedir: '/files')
    ftp(action: 'send', remotedir: '/files') {
        fileset(file: jar.archivePath)
    }
    
    ftp(action: 'mkdir', remotedir: '/files/deobf')
    ftp(action: 'send', remotedir: '/files/deobf') {
        fileset(file: deobfJar.archivePath)
    }

    ftp(action: 'send', remotedir: '.') {
        fileset(file: 'web/changelog.txt')
        fileset(file: 'web/versions.ini')
    }
}

/**
 * This is deply_web task
 */
task deployWeb << {
    ftp(action: 'send', remotedir: '.') {
        fileset(dir: 'web') //everything from the web directory
    }
}

task forgecraft(type: Copy, dependsOn: 'reobf') {
    from jar.archivePath
    into file(config.dir_forgecraft)
}

curse {
    apiKey = priv.cfkey
    projectId = "225643"
    changelog = """
        See http://vazkii.us/mod/Botania/changelog.php#${version}
    """
    releaseType = "release"
}

artifacts {
    archives sourcesJar
    archives apiJar
    archives deobfJar
}

defaultTasks 'clean', 'build', 'forgecraft', 'curse', 'upload' //remove clean if you want faster builds, this will stop rare inconsistancies.
